/*!
 * 
 * tex2max v1.3.1       Mon Oct 28 2024 15:09:18 GMT+0100 (Central European Standard Time)
 * by André Storhaug    andr3.storhaug@gmail.com
 * https://github.com/KQMATH/tex2max
 * 
 * Copyright: 2019 NTNU
 * License: GPL-3.0-or-later
 * 
 * Build: c94d51cea37905b6d2bc
 * 
 */
define((function(){return function(e){var n={};function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=n,t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)t.d(r,o,function(n){return e[n]}.bind(null,o));return r},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=0)}([function(e,n,t){"use strict";t.r(n);let r={};const o={onlySingleVariables:!1,handleEquation:!1,addTimesSign:!0,disallowDecimalPoints:!1,disallowDecimalCommas:!1,onlyGreekName:!1,onlyGreekSymbol:!1,debugging:!1};function i(e){let n=0;for(let t=0;t<e.length;t++)if(!0===o[e[t]]&&n++,n>1)throw new Error('Only one of the options: "'+e.join('", "')+'" can be set to "true"')}function l(e){r={},r=Object.assign(o,e),i(["disallowDecimalPoints","disallowDecimalCommas"]),i(["onlyGreekName","onlyGreekSymbol"])}function a(){return 0===Object.keys(r).length&&r.constructor===Object&&l(),Object.assign({},r)}const u=e=>{a().debugging&&console.debug(e)};const s={WHITESPACE:{name:"WHITESPACE",symbol:" ",regex:/^\s+/},BACKSLASH:{name:"BACKSLASH",symbol:"\\",regex:/^[\\\\]$/},AMPERSAND:{name:"AMPERSAND",symbol:"&",regex:/^[&]$/},OPENING_BRACE:{name:"OPENING_BRACE",symbol:"{",regex:/^[\{]$/},CLOSING_BRACE:{name:"CLOSING_BRACE",symbol:"}",regex:/^[\}]$/},OPENING_PARENTHESES:{name:"OPENING_PARENTHESES",symbol:"(",regex:/^[\(]$/},CLOSING_PARENTHESES:{name:"CLOSING_PARENTHESES",symbol:")",regex:/^[\)]$/},OPENING_BRACKET:{name:"BRACKET",symbol:"[",regex:/^[\[]$/},CLOSING_BRACKET:{name:"BRACKET",symbol:"]",regex:/^[\]]$/},VERTICAL_BAR:{name:"VERTICAL_BAR",symbol:"|",regex:/^[|]$/},NUMBER_LITERAL:{name:"NUMBER_LITERAL",symbol:null,regex:/^[0-9˙]+$/i},PERIOD:{name:"PERIOD",symbol:".",regex:/^[.]$/},COMMA:{name:"COMMA",symbol:",",regex:/^[,]$/},STRING_LITERAL:{name:"STRING_LITERAL",symbol:null,regex:/^[a-zA-Zα-ωΑ-ΩäöüßÄÖÜ]+$/iu},OPERATOR:{name:"OPERATOR",symbol:null,regex:/^[+\-*/=^!<>]$/i},UNDERSCORE:{name:"UNDERSCORE",symbol:null,regex:/^[_]$/i}};class c{constructor(e,n){this.value=n,this.type=e}}const f=new Map([["begin",null],["le",null],["ge",null],["ne",null],["end",null],["to",null],["cdot",null],["overline",null],["times",null],["ast",null],["div",null],["mod",null],["pm",null],["frac",null],["infty","inf"],["operatorname",null]]),p=[],m=new Map([["cdot",{type:"operator",operatorType:"infix",value:"*"}],["times",{type:"operator",operatorType:"infix",value:"*"}],["ast",{type:"operator",operatorType:"infix",value:"*"}],["le",{type:"operator",operatorType:"infix",value:"≤"}],["ge",{type:"operator",operatorType:"infix",value:"≥"}],["ne",{type:"operator",operatorType:"infix",value:"≠"}],["overline",{type:"operator",operatorType:"infix",value:"˙"}],["div",{type:"operator",operatorType:"infix",value:"/"}],["mod",{type:"operator",operatorType:"infix",value:"%"}],["pm",{type:"operator",operatorType:"infix",value:"+-"}]]);function d(e){let n=!1;return void 0!==f.get(e)&&(n=!0),n}const v=new Map([["lg",null],["log",null],["ln",null],["sqrt",null],["max",null],["min",null],["sum",null],["lim",null],["int","integral"],["binom",null],["abs",null],["arccos","acos"],["arccosh","acosh"],["arccot","acot"],["arccoth","acoth"],["arccsc","acsc"],["arccsch","acsch"],["arcsec","asec"],["arcsech","asech"],["arcsin","asin"],["arcsinh","asinh"],["arctan","atan"],["arctanh","atanh"]]),g=[{name:"cos",inverse:"acos"},{name:"cosh",inverse:"acosh"},{name:"cot",inverse:"acot"},{name:"coth",inverse:"acoth"},{name:"csc",inverse:"acsc"},{name:"csch",inverse:"acsch"},{name:"sec",inverse:"asec"},{name:"sech",inverse:"asech"},{name:"sin",inverse:"asin"},{name:"sinh",inverse:"asinh"},{name:"tan",inverse:"atan"},{name:"tanh",inverse:"atanh"}];function y(e){let n;if(h(e))n=e;else if(null===(n=v.get(e)))n=e;else if(void 0===n)throw new Error("Not recognised function: "+n);return n}function h(e){let n=g.find(n=>n.name===e),t=g.find(n=>n.inverse===e);return void 0!==n||void 0!==t}function b(e){let n;u('Getting the inverse of the function "'+e+'"');let t=!1;for(let r in g)g[r].name===e?(t=!0,n=g[r].inverse):g[r].inverse===e&&(t=!0,n=g[r].name);return void 0===n?null:(u("- Found the inverse: "+n),n)}const E=["matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix","smallmatrix"],w=[E];const A={ROMAN_NUMBERS:{name:"ROMAN_NUMBERS",symbol:null,regex:/[IVXLCDM]+/,type:"roman_numbers"}},S=[{name:"alpha",symbol:"α"},{name:"beta",symbol:"β"},{name:"gamma",symbol:"γ"},{name:"delta",symbol:"δ"},{name:"epsilon",symbol:"ϵ"},{name:"zeta",symbol:"ζ"},{name:"eta",symbol:"η"},{name:"theta",symbol:"θ"},{name:"iota",symbol:"ι"},{name:"kappa",symbol:"κ"},{name:"lambda",symbol:"λ"},{name:"mu",symbol:"μ"},{name:"nu",symbol:"ν"},{name:"omicron",symbol:"ο"},{name:"pi",symbol:"π"},{name:"rho",symbol:"ρ"},{name:"sigma",symbol:"σ"},{name:"tau",symbol:"τ"},{name:"upsilon",symbol:"υ"},{name:"phi",symbol:"ϕ"},{name:"chi",symbol:"χ"},{name:"psi",symbol:"ψ"},{name:"omega",symbol:"ω"}];function R(e){return e.charAt(0).toUpperCase()+e.slice(1)}function N(e){return e.charAt(0).toUpperCase()===e.charAt(0)}function T(e){let n=S.find(n=>n.name===e.toLowerCase());return void 0===n?null:(n=n.symbol,N(e)&&(n=R(n)),n)}function C(e){let n=S.find(n=>n.symbol===e.toLowerCase());return void 0===n?null:(n=n.name,N(e)&&(n=R(n)),n)}function L(e){let n=S.find(n=>n.name===e.toLowerCase()),t=S.find(n=>n.symbol===e.toLowerCase());return void 0!==n||void 0!==t}const x=new Map([["left","right"],["right","left"]]);function O(e){const n=a();u("\n------------------ PARSING -> -------------------");let t=0,r=[];function o(e){var n;(n=e)&&"object"==typeof n&&n.constructor===Array?r.push(...e):r.push(e)}function i(){return u("Consuming position: "+t),e[t++].value}function l(){return u("Skip token at position: "+t),e[t++].value}function c(){return e[t]?e[t].value:void 0}function f(){return e[t].type.symbol}function g(){return e[t+1]?e[t+1].type.name:null}function b(e){let n=r[r.length-e];return n?n.type:null}function E(){return u("- Single number"),{type:"number",value:i()}}function S(){u("Parsing number: "+e[t].value);let n=g(),r=function(){let n=e[t-1];return n?n.value:null}(),o=b(1);if("^"!==r&&"_"!==r&&"function"!==o){if(null!==n&&n===s.NUMBER_LITERAL.name){return u('- Found another number "'+e[t+1].value+'", continuing parsing'),{type:"number",value:E().value+k().value}}return E()}return E()}function R(){u('- Found letter "'+c()+'"');let e="";return g()===s.STRING_LITERAL.name?(u(", Continuing parsing"),e=i()+R(s.STRING_LITERAL.name),u("Current word: "+e)):e=i(),u("Current sequence: "+e),e}function N(){u("Parsing variable: "+e[t].value);let r="",o=t;if(r=R(),u("Current word: "+r),function(e){let n=!1;u("Checking "+e+" for reserved word");for(let t in A){if(!A.hasOwnProperty(t))continue;A[t].regex.test(e)&&(n=!0)}return n}(r)){let e;u("Variable contains reserved words");let l=function(e){let n="",t="";for(let r in A)if(A.hasOwnProperty(r)){let o=A[r].regex;if(null!==e.match(o)){n=A[r].type,t=o.exec(e);break}}return{type:n,value:t}}(r).value;if(e=l[0].length,u("reserved word: "+l[0]+", length: "+e+", index "+l.index),l.index>0)if(t=o+l.index,r=r.substr(0,l.index),!0===n.onlySingleVariables&&!1===n.addTimesSign){if(r.length>1)throw new Error("The current options only allow for single variables")}else n.onlySingleVariables&&(t=o,r=i());else t=o+e,r=l[0]}else if(!0===n.onlySingleVariables&&!1===n.addTimesSign){if(r.length>1)throw new Error("The current options only allow for single variables")}else n.onlySingleVariables&&(t=o,r=i());return{type:"variable",value:r}}function T(){let e=null,n=function(e){let n="";switch(e){case s.OPENING_BRACE.symbol:case s.CLOSING_BRACE.symbol:n="curly";break;case s.OPENING_PARENTHESES.symbol:case s.CLOSING_PARENTHESES.symbol:n="normal";break;case s.OPENING_BRACKET.symbol:case s.CLOSING_BRACKET.symbol:n="square"}return n}(f());return e={type:function(e){let n="";switch(e){case s.OPENING_BRACE.symbol:case s.OPENING_PARENTHESES.symbol:case s.OPENING_BRACKET.symbol:n="opening_bracket";break;case s.CLOSING_BRACE.symbol:case s.CLOSING_PARENTHESES.symbol:case s.CLOSING_BRACKET.symbol:n="closing_bracket"}return n}(f()),symbol:n,value:i()}}function C(e){let n=null,t=d(e),r=L(e);if(t)void 0===(n=m.get(e))&&(n={type:"token",value:e});else if(r)n={type:"token",value:e};else{if(!function(e){let n=!1,t=0;for(;!n&&t<p.length;)e===p[t]&&(n=!0),t++;return n}(e))throw new Error("Encountered an unsupported macro: "+e);n=null}return n}function O(e){if(c()!==s.OPENING_BRACE.symbol)throw new Error("No argument for environments are present.");l();let n=R();if(l(),function(e){const n=w.reduce((n,t)=>(!0!==n&&Array.isArray(t)&&(n=t.reduce((n,t)=>n||t===e,!1)),n||t===e),!1);return u("Is acknowledged environment?: "+n),n}(n)){if("begin"===e||"end"===e)return{type:"environment",state:e,value:n};throw new Error("environment state "+e+" is not valid")}throw new Error("Environment type "+n+" is not supported")}function I(){u("Found backslash");let e=null;if(g()===s.BACKSLASH.name)return{type:"DOUBLE_BACKSLASH",value:i()+i()};if(t++,void 0===c())return null;if(function(e){let n=!1;return[" ","{","}","\\"].forEach(t=>{e===t&&(n=!0,u(e+" is special char"))}),n}(c()))return e=function(e){let n=null;switch(e){case" ":n=null;break;case"{":case"}":n=T();break;case"\\":n={type:"DOUBLE_BACKSLASH",value:i()+i()};break;default:return!1}return n}(c());let n=R();return e="begin"===n?O("begin"):"end"===n?O("end"):"operatorname"===n?function(){let e=null;return l(),e=_(R()),l(),e}():function(e){let n=!1;if(h(e))n=!0;else{void 0!==v.get(e)&&(n=!0)}return n}(n)?_(n):function(e){let n=!1;return void 0!==x.get(e)&&(n=!0),n}(n)?function(e){let n=null;return n={type:"delimiter",value:e}}(n):C(n)}function _(e){let n={};return n={type:"function",value:y(e)}}function P(){u("Found underscore"),l(),l();let e=function e(n){u('- Found letter "'+c()+'"');let t="";return n.includes(g())?(u(", Continuing parsing"),t=i()+e(n),u("Current word: "+t)):t=i(),u("Current sequence: "+t),t}([s.STRING_LITERAL.name,s.NUMBER_LITERAL.name,s.PERIOD.name,s.COMMA.name,s.UNDERSCORE.name,s.OPENING_PARENTHESES.name,s.CLOSING_PARENTHESES.name,s.OPENING_BRACKET.name,s.CLOSING_BRACKET.name,s.WHITESPACE.name,s.AMPERSAND.name,s.OPERATOR.name,s.BACKSLASH.name]);return l(),{type:"index_word",value:"_{"+e+"}"}}function k(){let r=null;switch(e[t].type){case s.NUMBER_LITERAL:u('Found NUMBER_LITERAL "'+c()+'"'),r=S();break;case s.PERIOD:u('Found PERIOD "'+c()+'"'),r=function(){u("Parsing point: "+c());let e=b(1);if(n.disallowDecimalPoints)throw new Error('The current options doesn\'t allow decimal points "."');if("number"!==e)throw new Error("Leading decimal separators are not allowed");return{type:"point",value:i()}}();break;case s.COMMA:u('Found COMMA "'+c()+'"'),r=function(){if(u("Parsing comma: "+c()),n.disallowDecimalCommas)throw new Error('The current options doesn\'t allow decimal commas ","');return{type:"comma",value:i()}}();break;case s.BACKSLASH:u('Found BACKSLASH "'+c()+'"'),r=I();break;case s.OPERATOR:u('Found OPERATOR "'+c()+'"'),r=function(){u("Found operator");const n=e[t];return/^[+\-*/=^_<>]$/i.test(n.value)?{type:"operator",operatorType:"infix",value:i()}:/^[]$/i.test(n.value)?{type:"operator",operatorType:"prefix",value:i()}:/^[!]$/i.test(n.value)?{type:"operator",operatorType:"postfix",value:i()}:void 0}();break;case s.UNDERSCORE:u('Found UNDERSCORE "'+c()+'"'),r=P();break;case s.STRING_LITERAL:u('Found STRING_LITERAL "'+c()+'"'),r=N();break;case s.OPENING_BRACE:case s.CLOSING_BRACE:u('Found BRACKET "'+c()+'"'),r=T();break;case s.OPENING_PARENTHESES:case s.CLOSING_PARENTHESES:u('Found BRACKET "'+c()+'"'),r=T();break;case s.OPENING_BRACKET:case s.CLOSING_BRACKET:u('Found BRACKET "'+c()+'"'),r=T();break;case s.VERTICAL_BAR:u('Found VERTICAL_BAR "'+c()+'"'),r=function(){let e=null;if("delimiter"!==b(1))throw new Error('Pipe symbols may only be used with "left" / "right" delimiters.');return e={type:"vertical_bar",value:i()}}();break;default:t++}return r}return function(){let n=0;for(;t<e.length;){u("--------- Parsing next token. While loop run: "+n+" ---------");let r=k();if(null!==r){if(void 0===r)throw t=e.length,new Error("node is undefined");if(o(r),u("Parsed result type: "+r.type),++n>1e3)throw new Error("Max count reached, infinite loop encountered.")}}return u("--------- End of while loop. Tokens position: "+(t-1)+" of "+(e.length-1)+" ---------"),r}()}function I(e){let n=0,t=e[0].value;for(let r=0;r<e.length;r++)if("environment"===e[r].type&&"begin"===e[r].state)u('-- Found new "begin" environment, depth '+ ++n);else if("environment"===e[r].type&&"end"===e[r].state){if(1===n){if(t!==e[r].value)throw new Error('the environment types "'+t+'" and '+e[r].value+" doesn't match up.");return u("-- Found original environment end at position "+r),r-1}u('-- Found environment "end", depth '+--n)}throw new Error('Environments "begin" and "end" doesn\'t match up')}function _(e){u("Checking expression "+JSON.stringify(e)+" for variable");let n=!1;if(Array.isArray(e))for(let t=0;t<e.length;t++)if("group"===e[t].type){_(e[t].value)&&(n=!0)}else"variable"===e[t].type&&(n=!0);else n="variable"===e.type;return n}function P(e,n,...t){let r="";return r+=e+"("+n,t.forEach(e=>{!1!==e&&null!=e&&(r+=","+e)}),r+=")"}function k(e,n,t,r){let o=!1,i=!1,l=[];if(Array.isArray(e))for(let a=0;a<e.length;a++)if("group"===e[a].type&&r){let r;"type"===n?i=(r=k(e[a].type,"type",t,!0)).isPresent:"value"===n&&(i=(r=k(e[a].value,"value",t,!0)).isPresent),i&&(l.push(r.position),o=!0)}else"type"===n?e[a].type===t&&(o=!0,l.push(a)):"value"===n&&e[a].value===t&&(o=!0,l.push(a));else"type"===n?e.type===t&&(o=!0,l=0):"value"===n?e.value===t&&(o=!0,l=null):o=!1;return{isPresent:o,position:l}}function F(e){return Array.isArray(e)?e:"object"==typeof e&&"string"!=typeof e?[e]:void 0}function B(e){let n=e.charAt(0),t=e.charAt(-1);return n.match(/[({\[]/)||t.match(/[)}\]]/)?e.substr(1,e.length-2):e}function G(e,n){if(void 0===e)throw new Error(n)}function M(e,n=[],t=[]){let r=0,o=null,i=null;if("group"===e[0].type&&1===e.length)r=1;else{let l=0,a=!1;for(;l<e.length&&!a;)null!=n&&n.forEach(n=>{e[l].type===n&&(r=l,a=!0,o="type",i=n)}),null==t||a||t.forEach(n=>{e[l].value===n&&(r=l,a=!0,o="value",i=n)}),l++;a||(r=e.length)}return{expressionLength:r,condition:o,conditionValue:i}}function H(e){u("\n------------------ POST PARSING -> -------------------");a();let n=0,t=[];for(;n<e.length;n++){e[n];u("--------- Parsing next token' ---------");let t=r();if(null===t)continue;if(void 0===t)throw n=e.length,new Error("node is undefined");o(t);let l="";i(t)?(t.forEach(e=>{l+=e.type+" + "}),l=l.substr(0,l.length-3)):l=t.type,u("Parsed result type(s): "+l+".")}function r(){let t=null;const r=l(),o=s();switch(e[n].type){case"delimiter":u('Found delimiter "'+o+'"'),t=function(){let t,r,o=null;l();const i=s();switch(c(1)){case"vertical_bar":u('Found vertical_bar "'+i+'"'),t=function(){let e=null,n=y("abs");return e={type:"function",value:n}}()}return r=function(){const t=s(),r=c(1),o=f(1);let i=function(t,r,o){u("Finding matching symbols");let i=0;const l=r,a=x.get(r);let s=c(1),m=f(1),d=function(t){if(void 0===e[n+t])return null;return e[n+t]}(1);if("opening_bracket"===s)return p(t,r,d.symbol);for(let e=0;e<t.length;e++){const n=t[e];if(s=t[e+1]?t[e+1].type:"",m=t[e+1]?t[e+1].value:"",u("-- Item:"+n.value),"delimiter"===n.type&&n.value===l&&m===o)u("-- Found starting point, depth "+ ++i);else if("delimiter"===n.type&&n.value===a&&m===o){if(1===i)return u("-- Found end of symbol group at position "+e),e;u("-- Found closing point, depth "+--i)}}throw new Error('"'+r+o+'" symbols does not match up')}(e.slice(n),t,o);if(i instanceof Error)return i;const l=e.slice(n+2,n+i);return u("New group created"),n+=i,{type:"group",symbol:r,value:H(l)}}(),o=(o=[t,r]).filter((function(e){return null!=e}))}();break;case"opening_bracket":u('Found bracket "'+o+'"'),t=function(){let t=l().symbol,r=p(e.slice(n),null,t);if(r instanceof Error)return r;const o=e.slice(n+1,n+r);return u("New group created2"),n+=r,{type:"group",symbol:t,value:H(o)}}();break;case"number":u('Found number  "'+o+'"'),t=function(){let e;e="point"===c(1)||"comma"===c(1)?function(){let e,t;if(function(){let e=0,n=!0,t=0;for(;n;)"point"===c(e)||"comma"===c(e)?t++:"number"!==c(e)&&(n=!1),e++;return t}()>1)throw new Error("Only one decimal separator is allowed");if("number"!==c(2)&&"˙"!==f(2))throw new Error("Trailing decimal separator isn't allowed");{u('- Found fractional decimal part"'+s()+'", continuing parsing');let e=f(1);t=s()+e+f(2)}return n+=2,e={type:"float",value:t}}():l();return e}();break;case"comma":u('Found comma  "'+o+'"'),t=function(){throw new Error("Leading decimal separators are not allowed")}();break;default:t=r}return t}function o(e){i(e)?t.push(...e):t.push(e)}function i(e){return e&&"object"==typeof e&&e.constructor===Array}function l(){return e[n]?e[n]:void 0}function s(){return e[n]?e[n].value:void 0}function c(t){return void 0===e[n+t]?null:e[n+t].type}function f(t){return void 0===e[n+t]?null:e[n+t].value}function p(e,n,t){u("Finding matching bracket");let r="",o="";const i=n,l=x.get(n);let a=c(1),s=f(1);switch(t){case"normal":r="(",o=")";break;case"curly":r="{",o="}";break;case"square":r="[",o="]"}let p=0;if(n)for(let n=0;n<e.length;n++){const t=e[n];if(a=e[n+1]?e[n+1].type:"",s=e[n+1]?e[n+1].value:"",u("-- Char:"+t.value),"delimiter"===t.type&&t.value===i&&s===r)u("-- Found starting bracket, depth "+ ++p);else if("delimiter"===t.type&&t.value===l&&s===o){if(1===p)return u("-- Found original closing bracket at position "+n),n;u("-- Found closing bracket, depth "+--p)}}else for(let n=0;n<e.length;n++){const t=e[n];if(u("-- Char:"+t.value),t.value===r)u("-- Found starting bracket, depth "+ ++p);else if(t.value===o){if(1===p)return u("-- Found original closing bracket at position "+n),n;u("-- Found closing bracket, depth "+--p)}}throw new Error("Brackets do not match up")}return t}n.default=class{constructor(e){l(e),this.options=a(),this.lastInput="",this.lastResult=""}getLastInput(){return this.lastInput()}getLastResult(){return this.lastResult}updateOptions(e){l(e),this.options=a()}foo(){return"parsing to maxima string"}toMaxima(e){let n;l(this.options),console.log("parsing to maxima string"),this.lastInput=e;let t=function(e){let n=[];u("\n------------------ SCANNER -> -------------------");let t=0;for(;t<e.length;){let o=!1;for(let i in s)s.hasOwnProperty(i)&&e[t].match(s[i].regex)&&(r=e[t],n.push(r),o=!0);if(!o)throw new Error("Encountered unsupported character: "+e[t]);t++}var r;return n}(e);u(t);let r=function(e){let n=0,t=[],r=e=>t.push(e),o=()=>t;function i(e){if(void 0===e)return null;for(let n in s){if(!s.hasOwnProperty(n))continue;let t=s[n],r=t.regex;if(e.match(r))return t}return null}return function(){for(u("\n------------------ LEXICAL ANALYSIS -> -------------------");n<e.length;){let t,o="",l=i(e[n]);u("Consuming position: "+n+", char: "+e[n]),o=e[n++],void 0!==(t=new c(l,o))&&r(t)}return o()}()}(t);u(r);let o=O(r);u(o),this.structure=H(o),u(this.structure);let i=function e(n){u("\n------------------ TRANSPILING -> -------------------");const t=a();let r="",o=0;for(r+="(";o<n.length;o++){const a=n[o];switch(a.type){case"operator":y();break;case"number":w();break;case"float":A();break;case"variable":S();break;case"index_word":R();break;case"group":N();break;case"token":x();break;case"function":O();break;case"environment":H()}function i(e){u("Finding end of integral");let n=1,t="";for(let r=0;r<e.length;r++){const o=e[r].value;if(u("-- Char:"+o),"function"===e[r].type&&"integral"===e[r].value)u("-- Found starting integral, depth "+ ++n);else if("variable"===e[r].type&&"d"===o[0]){let e=/(d)[A-z]/g,i=o.match(e);if(null!==i&&i.length>=1){if(1===n)return t=o.substring(1),u("-- Found end of original integral at position "+r),{length:r,variable:t};u("-- Found integral end, depth "+--n)}}}throw new Error("No end of integral located")}function l(n){let t,r,o=0;for(let i=0;i<2;i++)if("_"===n[o+i].value)t=e(F(n[++o+i]));else{if("^"!==n[o+i].value)throw new Error("Finite integral must have both upper and lower limits");r=e(F(n[++o+i]))}return{lowerLimit:t,upperLimit:r}}function s(n){if(!_(n[0]))throw new Error('Limit: "From" argument must be a symbol');if(!k(n[1],"value","to",!1).isPresent)throw new Error('Limit: no "to" token provided');if(void 0===n[2])throw new Error('Limit: "To" argument missing');let t="";return{variable:n[0].value,value:t+=e(F(n.slice(2))),direction:c(n.slice(2))}}function c(e){u("Checking if limit is one sided");let n=!1,t="",r="";for(let o=0;o<e.length;o++){if("group"===e[o].type){let t=c(e[o].value);!1!==t&&(n=!0,r=t)}("+"===e[o].value||"-"===e[o].value)&&o+1>=e.length&&(n=!0,t=e[o].value)}return u(n?"- Limit is one-sided from the "+(r="+"===t?"plus":"minus")+" side":"- Limit is not one-sided"),!!n&&r}function p(n){let t="";t+="matrix(";let r=[],o=[];for(let t=0;t<n.length;t++){G(n[t],"Missing argument in matrix"),"DOUBLE_BACKSLASH"===n[t].type?(r.push(o),o=[]):o.push(e(F(n[t])))}r.push(o);let i=r[0].length;for(let e=0;e<r.length;e++){if(r[e].length!==i)throw new Error("All rows in matrix must be the same length");0!==e&&(t+=","),t+="["+r[e].toString()+"]"}return t+=")"}function m(n){let t,r,o=0;for(let i=0;i<2;i++)if("_"===n[o+i].value)t=n[++o+i];else{if("^"!==n[o+i].value)throw new Error("Finite integral must have both upper and lover limits");r=e(F(n[++o+i]))}return{lowerLimit:t,upperLimit:r}}function v(n){G(n[0],"Missing index");const t=n[0];G(n[1],"Index must be assigned. Missing equal sign");const r=n[1].value;if(!_(t))throw new Error("Index must be a variable");if("="!==r)throw new Error("Index must be assigned. Missing equal sign");let o="";return o+=e(F(n.slice(2))),{variable:t.value,value:o}}function g(e,...o){let i=n[e-1],l=!0;e>0&&(o.forEach(e=>{let n=!0;for(let t in e)e.hasOwnProperty(t)&&i[t]!==e[t]&&(n=!1);!0===n&&(l=!1)}),t.addTimesSign&&l&&(u("Adding * before "+a.type+": "+a.value+", previous item: "+n[e-1].type),r+="*"))}function y(){const e=n[o-1];if(0===o&&"+"===a.value)u("Structure starts with +, ignoring");else{if(0===o&&"prefix"!==a.operatorType&&"-"!==a.value)throw new Error("Operator "+a.value+" is not an prefix operator");if("+"===a.value||"-"===a.value)r+=a.value;else if("postfix"===a.operatorType){if("operator"===e.type)throw new Error("Operator "+a.value+" has to be an postfix operator");r+=a.value}else if("prefix"===a.operatorType);else if("infix"===a.operatorType){if("operator"===e.type||"operator"===e.type)throw new Error("Operator "+a.value+" has to be an infix operator");r+=a.value}}if(("infix"===a.operatorType||"prefix"===a.operatorType)&&o===n.length-1)throw new Error("Operator "+a.value+" is an invalid end character.")}function w(){g(o,{type:"number"},{type:"float"},{type:"operator",operatorType:"infix"}),r+=a.value}function A(){g(o,{type:"number"},{type:"float"},{type:"operator",operatorType:"infix"});let e=a.value.replace(",",".");r+=e}function S(){let e="";if(g(o,{type:"operator",operatorType:"infix"}),null!==C(a.value)){let n=C(a.value);t.onlyGreekSymbol&&(n=T(n)),u("greek letter "+n),e+=n}else e+=a.value;r+=e}function R(){let e="";if(null!==C(a.value)){let n=C(a.value);t.onlyGreekSymbol&&(n=T(n)),u("greek letter "+n),e+=n}else e+=a.value;r+=e}function N(){let n="";g(o,{type:"function"},{type:"operator"}),n+=e(a.value),"vertical_bar"===a.symbol&&(n=B(n)),r+=n}function x(){u("Handling token: "+a.value);let i="",l=o;if(null!==T(a.value)){let e=a.value;t.onlyGreekSymbol&&(e=T(e)),u("greek letter "+e),i+=e}if(null!==C(a.value)){let e=a.value;t.onlyGreekName&&(e=C(e)),u("greek letter "+e),i+=e}if(d(a.value)){let e=f.get(a.value);null===e?u("Skipping macro "+a.value):void 0!==e&&(u("Adding macro "+e),i+=e)}if("frac"===a.value){if("group"!==n[o+1].type||"group"!==n[o+2].type)throw new Error("Fraction must have 2 following parameters");u("Found fraction"),i+="(",i+=e(n[o+1].value)+"/"+e(n[o+2].value),i+=")",o+=2}l>0&&""!==i&&(d(a.value)||L(a.value))&&g(l,{type:"operator"}),r+=i}function O(){g(o,{type:"operator"});n[o+1];if("sqrt"===a.value){if("group"!==n[o+1].type)throw new Error("Square root must be followed by [] or {}");{let t="";if("square"===n[o+1].symbol&&"group"===n[o+2].type){u("Found function nth-square root");let r=e(n[o+1].value);t+=e(n[o+2].value),t+="^(1/"+r+")",o++}else r+=a.value,u("Found function square root"),t+=e(n[o+1].value);r+=t,o++}}else"lim"===a.value?(u('Found function "limit"'),function(){let t="",i="";if("_"!==n[o+1].value||"group"!==n[o+2].type)throw new Error('Limit must have a "from" and "to" value');{let r=n[o+2].value;if(r=s(r),void 0===n[o+3])throw new Error("Missing argument in limit");{let{expressionLength:t}=M(n.slice(o+3),[],["+","-","+-"]);i+=e(n.slice(o+3,o+3+t)),o+=t-1}t=P("limit",i,r.variable,r.value,r.direction),o+=3}r+=t}()):"binom"===a.value?(u('Found function "binomial"'),function(){let t="",i="",l="",a=n[o+1].type,u=n[o+2].type;if("group"!==a||"group"!==u)throw new Error("Binomial must have 2 following groups");i+=e(n[o+1].value),l+=e(n[o+2].value);t+=P("binomial",i,l),r+=t,o+=2}()):"sum"===a.value?(u('Found function "sum"'),function(){let t,i,l="",a="",s="";if("_"!==n[o+1].value&&"^"!==n[o+1].value)throw new Error("Sum does not contain the correct number of arguments");{let e=m(n.slice(o+1)),r=e.lowerLimit.value;i=e.upperLimit,o+=4,r=v(r),s=r.variable,t=r.value,u("Sum: arguments are form "+t+" to "+i)}if(void 0===n[o+1])throw new Error("Missing argument in sum");{let{expressionLength:t}=M(n.slice(o+1),[],["+","-","+-"]);a+=e(n.slice(o+1,o+1+t)),o+=t}l+=P("sum",a,s,t,i),r+=l}()):"integral"===a.value?(u('Found function "integral"'),function(){let t,a,s,c="",f="",p="",m=!1;if(G(n[o+1],"Missing argument in integral"),"_"!==n[o+1].value&&"^"!==n[o+1].value)u("Integral is symbolic"),m=!0,o++;else{let e=l(n.slice(o+1,o+5));t=e.lowerLimit,a=e.upperLimit,u("Integration limits are from "+t+" to "+a),o+=5}let d=i(n.slice(o));p+=d.variable,s=d.length;let v=n.slice(o,o+s);G(v[v.length-1],"Missing argument in integral"),"*"===v[v.length-1].value&&v.splice(-1,1);f+=e(v),o+=s,c+=m?P("integrate",f,p):P("integrate",f,p,t,a);r+=c}()):"abs"===a.value?(u('Found function "abs"'),function(){let t="",i=a.value;t+=i,t+=e(F(n[o+1])),o++,r+=t}()):h(a.value)?(u('Found trigonometric function "'+a.value+'"'),function(){let t,i="",l=!1,s=a.value;if(G(n[o+1],"Missing argument in function: "+s),"^"===n[o+1].value){if(l=!0,G(n[o+2],"Missing argument in function: "+s+"^"),t=B(t=e(F(n[o+2]))),"-1"===t.replace(/[()]/g,"")){u("Function is inverse"),l=!1;let e=b(s);if(null===e)throw new Error("No inverse trigonometric function found for "+s);s=e}o+=2}i+=s,G(n[o+1],l?"Missing argument in function: "+s+"^"+e(F(n[o])):"Missing argument in function: "+s);if("group"===n[o+1].type)i+=e(n[o+1].value);else if("function"===n[o+1].type){let{expressionLength:t}=M(n.slice(o+2),["function"],["+","-","+-"]);t+=1,i+=e(F(n.slice(o+1,o+1+t))),o+=t-1}else{let{expressionLength:t}=M(n.slice(o+1),["function"],["+","-","+-"]);i+=e(F(n.slice(o+1,o+1+t))),o+=t-1}l&&(i="("+i+")^"+t);o++,r+=i}()):(u('Found normal "function"'),function(){let t="",i=a.value;if(G(n[o+1],"Missing argument in function: "+i),t+=i,"group"===n[++o].type)t+=e(n[o].value),o++;else if("function"===n[o].type){let{expressionLength:r}=M(n.slice(o+1),["function"],["+","-","+-"]);r+=1,t+=e(F(n.slice(o,o+r))),o+=r-1}else{let r,i=n.slice(o);for(r=0;r<i.length&&("variable"===i[r].type||"number"===i[r].type&&"float"===i[r].type);r++);let l=r;t+=e(F(n.slice(o,o+l))),o+=l-1}r+=t}())}function H(){if("begin"===a.state){g(o,{type:"operator"});let t="",i=I(n.slice(o));e=a.value,E.reduce((n,t)=>n||t===e,!1)&&(u("Found matrix environment"),t+=p(n.slice(o+1,o+1+i))),o+=i+1,r+=t}else"end"===a.state&&o++;var e}}if(/(\([ ]*\))/.test(r+=")"))throw new Error("Syntax error");if(""===r)throw new Error("EMPTY");return r}(this.structure);return n=B(i),this.options.handleEquation&&function(e){let n=0;if(e.forEach(e=>{"operator"===e.type&&"="===e.value&&n++}),1===n)return!0;if(n>1)throw new Error("Expression contains more than one equal signs");return!1}(this.structure)&&(n="solve("+n+")"),this.lastResult=n,n}}}]).default}));